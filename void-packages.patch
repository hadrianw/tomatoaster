diff --git a/srcpkgs/dbus/INSTALL b/srcpkgs/dbus/INSTALL
index 6d2e0a6c..580831cb 100644
--- a/srcpkgs/dbus/INSTALL
+++ b/srcpkgs/dbus/INSTALL
@@ -4,6 +4,6 @@ post)
 	[ ! -d etc/dbus-1/session.d ] && install -d etc/dbus-1/session.d
 	chown root:22 usr/libexec/dbus-daemon-launch-helper
 	chmod 4750 usr/libexec/dbus-daemon-launch-helper
-	usr/bin/dbus-uuidgen --ensure || :
+	../chroot usr/bin/dbus-uuidgen --ensure || :
 	;;
 esac
diff --git a/srcpkgs/eudev/INSTALL b/srcpkgs/eudev/INSTALL
index aa647697..29059eff 100644
--- a/srcpkgs/eudev/INSTALL
+++ b/srcpkgs/eudev/INSTALL
@@ -1,7 +1,7 @@
 case "$ACTION" in
 post)
 	echo "Updating udev(7) hwdb.bin..."
-	usr/bin/udevadm hwdb --update || :
+	../chroot usr/bin/udevadm hwdb --update || :
 
 	if [ -d usr/sbin -a ! -L usr/sbin ]; then
 		ln -s ../bin/udevd usr/sbin/udevd
diff --git a/srcpkgs/mdocml/INSTALL b/srcpkgs/mdocml/INSTALL
index 36be6310..4e6fd22c 100644
--- a/srcpkgs/mdocml/INSTALL
+++ b/srcpkgs/mdocml/INSTALL
@@ -1,6 +1,6 @@
 case "$ACTION" in
 post)
 	echo "Regenerating man db..."
-	usr/bin/makewhatis -a -Tutf8
+	../chroot usr/bin/makewhatis -a -Tutf8
 	;;
 esac
diff --git a/srcpkgs/xbps-triggers/files/gconf-schemas b/srcpkgs/xbps-triggers/files/gconf-schemas
index 9dd630df..19c22aeb 100755
--- a/srcpkgs/xbps-triggers/files/gconf-schemas
+++ b/srcpkgs/xbps-triggers/files/gconf-schemas
@@ -54,7 +54,7 @@ run)
 				continue
 			fi
 			GCONF_CONFIG_SOURCE="$GCONF_CONFIG_SOURCE" \
-				${GCONFTOOL2} --makefile-install-rule \
+				../chroot ${GCONFTOOL2} --makefile-install-rule \
 				${GCONF_SCHEMAS_DIR}/${f} >/dev/null
 			if [ $? -eq 0 ]; then
 				echo "Registered GConf schema: ${f}."
diff --git a/srcpkgs/xbps-triggers/files/gio-modules b/srcpkgs/xbps-triggers/files/gio-modules
index 532d9ef9..518390ca 100755
--- a/srcpkgs/xbps-triggers/files/gio-modules
+++ b/srcpkgs/xbps-triggers/files/gio-modules
@@ -28,7 +28,7 @@ run)
 	post-*)
 		if [ -x ${gioquery} -a -d ${giocachedir} ]; then
 			echo "Updating GLib GIO modules cache..."
-			${gioquery} ${giocachedir}
+			../chroot ${gioquery} ${giocachedir}
 		fi
 		;;
 	esac
diff --git a/srcpkgs/xbps-triggers/files/gsettings-schemas b/srcpkgs/xbps-triggers/files/gsettings-schemas
index 771bc10b..b6c4a8c2 100755
--- a/srcpkgs/xbps-triggers/files/gsettings-schemas
+++ b/srcpkgs/xbps-triggers/files/gsettings-schemas
@@ -37,7 +37,7 @@ run)
 		# Compile all GSettings schema files.
 		echo -n "Refreshing GSettings database from "
 		echo -n "${GLIB_SCHEMAS_DIR}... "
-		${GSCHEMASCOMP} ${GLIB_SCHEMAS_DIR}
+		../chroot ${GSCHEMASCOMP} ${GLIB_SCHEMAS_DIR}
 		if [ $? -eq 0 ]; then
 			echo "done."
 		else
diff --git a/srcpkgs/xbps-triggers/files/gtk-icon-cache b/srcpkgs/xbps-triggers/files/gtk-icon-cache
index bf425148..8da8bac2 100755
--- a/srcpkgs/xbps-triggers/files/gtk-icon-cache
+++ b/srcpkgs/xbps-triggers/files/gtk-icon-cache
@@ -44,7 +44,7 @@ run)
 			if [ -d "${dir}" ]; then
 				echo -n "Updating GTK+ icon cache for "
 				echo "${dir}..."
-				${iconcache_bin} -q -f -t ${dir}
+				../chroot ${iconcache_bin} -q -f -t ${dir}
 			fi
 		done
 		;;
diff --git a/srcpkgs/xbps-triggers/files/gtk-immodules b/srcpkgs/xbps-triggers/files/gtk-immodules
index ae965b9c..86557791 100755
--- a/srcpkgs/xbps-triggers/files/gtk-immodules
+++ b/srcpkgs/xbps-triggers/files/gtk-immodules
@@ -35,7 +35,7 @@ run)
 			if [ ! -d $(dirname $immodules_db) ]; then
 				install -d $(dirname $immodules_db)
 			fi
-			${immodules_bin} > ${immodules_db}
+			../chroot ${immodules_bin} > ${immodules_db}
 		fi
 		;;
 	esac
diff --git a/srcpkgs/xbps-triggers/files/gtk-pixbuf-loaders b/srcpkgs/xbps-triggers/files/gtk-pixbuf-loaders
index 8520253d..631073b5 100755
--- a/srcpkgs/xbps-triggers/files/gtk-pixbuf-loaders
+++ b/srcpkgs/xbps-triggers/files/gtk-pixbuf-loaders
@@ -38,7 +38,7 @@ run)
 		fi
 		if [ -x ${pixbuf_bin} ]; then
 			echo "Updating GDK Pixbuf loaders cache..."
-			${pixbuf_bin} --update-cache
+			../chroot ${pixbuf_bin} --update-cache
 		fi
 		;;
 	esac
diff --git a/srcpkgs/xbps-triggers/files/gtk3-immodules b/srcpkgs/xbps-triggers/files/gtk3-immodules
index efcb682f..e3de2379 100755
--- a/srcpkgs/xbps-triggers/files/gtk3-immodules
+++ b/srcpkgs/xbps-triggers/files/gtk3-immodules
@@ -32,7 +32,7 @@ run)
 	post-*)
 		if [ -x ${immodules_bin} ]; then
 			echo "Updating GTK+'s immodules database..."
-			${immodules_bin} > ${immodules_db}
+			../chroot ${immodules_bin} > ${immodules_db}
 		fi
 		;;
 	esac
diff --git a/srcpkgs/xbps-triggers/files/info-files b/srcpkgs/xbps-triggers/files/info-files
index 25917a0c..fa092259 100755
--- a/srcpkgs/xbps-triggers/files/info-files
+++ b/srcpkgs/xbps-triggers/files/info-files
@@ -53,7 +53,7 @@ run)
 			# Use host utility
 			installinfo=install-info
 		fi
-		$installinfo $infoargs ./$f $infodir/dir 2>/dev/null
+		../chroot $installinfo $infoargs ./$f $infodir/dir 2>/dev/null
 		if [ $? -eq 0 ]; then
 			echo "done."
 		else
diff --git a/srcpkgs/xbps-triggers/files/mimedb b/srcpkgs/xbps-triggers/files/mimedb
index 68c7678b..0a5b577c 100755
--- a/srcpkgs/xbps-triggers/files/mimedb
+++ b/srcpkgs/xbps-triggers/files/mimedb
@@ -27,7 +27,7 @@ run)
 	post-*)
 		if [ -x ${mimedb_bin} ]; then
 			echo "Updating shared-mime-info database..."
-			PKGSYSTEM_ENABLE_FSYNC=0 ${mimedb_bin} -n usr/share/mime > /dev/null
+			PKGSYSTEM_ENABLE_FSYNC=0 ../chroot ${mimedb_bin} -n usr/share/mime > /dev/null
 		fi
 		;;
 	esac
diff --git a/srcpkgs/xbps-triggers/files/pango-modules b/srcpkgs/xbps-triggers/files/pango-modules
index 608e9716..2d1decb2 100755
--- a/srcpkgs/xbps-triggers/files/pango-modules
+++ b/srcpkgs/xbps-triggers/files/pango-modules
@@ -36,7 +36,7 @@ run)
 		if [ -x ${pango_bin} ]; then
 			echo "Updating pango modules file..."
 			mkdir -p etc/pango
-			${pango_bin} > ${pango_modules}
+			../chroot ${pango_bin} > ${pango_modules}
 		fi
 		;;
 	esac
diff --git a/srcpkgs/xbps-triggers/files/system-accounts b/srcpkgs/xbps-triggers/files/system-accounts
index 7bf51e56..d4f55234 100755
--- a/srcpkgs/xbps-triggers/files/system-accounts
+++ b/srcpkgs/xbps-triggers/files/system-accounts
@@ -16,31 +16,6 @@ UPDATE="$5"
 
 export PATH="usr/sbin:usr/bin:/usr/sbin:/usr/bin:/sbin:/bin"
 
-group_add() {
-	local _grname _gid use_gid
-
-	_grname="${1%:*}"
-	_gid="${1#*:}"
-
-	if [ "${_gid}" != "${_grname}" ]; then
-		use_gid="gid ${_gid}"
-	fi
-
-	if ! getent group ${_grname} >/dev/null; then
-		if [ -n "$use_gid" ]; then
-			groupadd -r ${_grname} -g ${_gid} >/dev/null 2>&1
-		else
-			groupadd -r ${_grname} >/dev/null 2>&1
-		fi
-		if [ $? -eq 0 ]; then
-			echo "Created ${_grname} ($use_gid) system group."
-		else
-			echo "Failed to create ${_grname} ($use_gid) system group!"
-			exit 1
-		fi
-	fi
-}
-
 case "$ACTION" in
 targets)
 	echo "post-install pre-remove"
@@ -50,35 +25,11 @@ run)
 		exit 0
 	fi
 
-	if [ -x sbin/useradd -o -x bin/useradd ]; then
-		USERADD=1
-	fi
-	if [ -x sbin/userdel -o -x bin/userdel ]; then
-		USERDEL=1
-	fi
-	if [ -x sbin/groupadd -o -x bin/groupadd ]; then
-		GROUPADD=1
-	fi
-	if [ -x sbin/groupdel -o -x bin/groupdel ]; then
-		GROUPDEL=1
-	fi
-	if [ -x bin/getent -o -x sbin/getent ]; then
-		GETENT=1
-	fi
-	if [ -x bin/passwd -o -x sbin/passwd ]; then
-		PASSWD=1
-	fi
-
 	case "$TARGET" in
 	post-install)
 		# System groups required by a package.
 		for grp in ${system_groups}; do
-			if [ -z "$GROUPADD" -a -z "$GETENT" ]; then
-				echo "WARNING: cannot create ${grp} system group (missing groupadd/getent)"
-				echo "The following group must be created manually: $grp"
-				continue
-			fi
-			group_add $grp
+			echo $grp >> config/groupadd
 		done
 
 		# System user/group required by a package.
@@ -97,30 +48,13 @@ run)
 			[ -z "$descr" ] && descr="${_uname} unprivileged user"
 			[ -n "$groups" ] && user_groups="-G $groups"
 
-			if [ -z "$USERADD" -a -z "$GETENT" -a -z "$PASSWD" ]; then
-				echo "WARNING: cannot create ${acct} system user/group (missing useradd/getent/passwd)"
-				echo "The following system account must be created:"
-				echo "   Account: ${uname:-${_uid}} (uid: '${_uid}')"
-				echo "   Description: '${descr}'"
-				echo "   Homedir: '${homedir}'"
-				echo "   Shell: '${shell}'"
-				echo "   Additional groups: '${groups}'"
-				continue
-			fi
-
-			group_add ${pgroup:-${acct}}
-
-			if ! getent passwd ${_uname} >/dev/null; then
-				useradd -c "$descr" -d "$homedir" -s "$shell" ${user_groups} \
-					${pgroup:+-N} ${use_id:=-g ${pgroup:-${_uname}}} -r ${_uname} && \
-					passwd -l ${_uname} >/dev/null 2>&1
-				if [ $? -eq 0 ]; then
-					echo "Created ${_uname} (${_uid}) system user."
-				else
-					echo "Failed to create ${acct} system user!"
-					exit 1
-				fi
-			fi
+			echo ${pgroup:-${acct}} >> config/groups
+			{
+			echo "homedir=\"$homedir\""
+			echo "shell=\"$shell\""
+			echo "descr=\"$descr\""
+			echo "user_groups=\"$user_groups\""
+			} > "config/useradd/$acct"
 		done
 		;;
 	pre-remove)
diff --git a/srcpkgs/xbps-triggers/files/update-desktopdb b/srcpkgs/xbps-triggers/files/update-desktopdb
index 6c918ece..4e4bc732 100755
--- a/srcpkgs/xbps-triggers/files/update-desktopdb
+++ b/srcpkgs/xbps-triggers/files/update-desktopdb
@@ -32,7 +32,7 @@ run)
 	post-*)
 		if [ -x ${desktopdb_bin} -a -d $desktopdb_dir ]; then
 			echo "Updating MIME database..."
-			${desktopdb_bin} ${desktopdb_dir}
+			../chroot ${desktopdb_bin} ${desktopdb_dir}
 		fi
 		;;
 	esac
diff --git a/srcpkgs/xbps-triggers/files/x11-fonts b/srcpkgs/xbps-triggers/files/x11-fonts
index ce629f82..8ae6abc0 100755
--- a/srcpkgs/xbps-triggers/files/x11-fonts
+++ b/srcpkgs/xbps-triggers/files/x11-fonts
@@ -37,11 +37,11 @@ run)
 	post-install|post-remove)
 		for dir in ${font_dirs}; do
 			echo "Building ${dir}/fonts.dir..."
-			${mkfontdir} .${dir}
+			../chroot ${mkfontdir} .${dir}
 			echo "Building ${dir}/fonts.scale..."
-			${mkfontscale} .${dir}
+			../chroot ${mkfontscale} .${dir}
 			echo "Updating fontconfig's cache..."
-			${fccache} -f .${dir}
+			../chroot ${fccache} -f .${dir}
 		done
 		;;
 	esac
diff --git a/srcpkgs/xbps-triggers/template b/srcpkgs/xbps-triggers/template
index 71c2bd2d..a408f3d2 100644
--- a/srcpkgs/xbps-triggers/template
+++ b/srcpkgs/xbps-triggers/template
@@ -1,7 +1,7 @@
 # Template file for 'xbps-triggers'
 pkgname=xbps-triggers
 version=0.102
-revision=3
+revision=4
 noarch=yes
 bootstrap=yes
 short_desc="The XBPS triggers for Void Linux"
